#include <iostream>
#include <algorithm>

#define endl "\n"

using namespace std;

int N, M, graph[500][500];
int result = 0;

//모양 전체
bool shapes[][4][4] = {
    //작대기 모양
    {
        {1,1,1,1},
        {0,0,0,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {1,0,0,0},
        {1,0,0,0},
        {1,0,0,0},
        {1,0,0,0},
    },
    //네모 모양
    {
        {1,1,0,0},
        {1,1,0,0},
        {0,0,0,0},
        {0,0,0,0},
    },
    //기역 모양
    {
        {1,0,0,0},
        {1,0,0,0},
        {1,1,0,0},
        {0,0,0,0},
    },{
        {0,0,1,0},
        {1,1,1,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {1,1,0,0},
        {0,1,0,0},
        {0,1,0,0},
        {0,0,0,0},
    },{
        {1,1,1,0},
        {1,0,0,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {0,1,0,0},
        {0,1,0,0},
        {1,1,0,0},
        {0,0,0,0},
    },{
        {1,1,1,0},
        {0,0,1,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {1,1,0,0},
        {1,0,0,0},
        {1,0,0,0},
        {0,0,0,0},
    },{
        {1,0,0,0},
        {1,1,1,0},
        {0,0,0,0},
        {0,0,0,0},
    },
    //지렁이 모양
    {
        {1,0,0,0},
        {1,1,0,0},
        {0,1,0,0},
        {0,0,0,0},
    },{
        {0,1,1,0},
        {1,1,0,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {0,1,0,0},
        {1,1,0,0},
        {1,0,0,0},
        {0,0,0,0},
    },{
        {1,1,0,0},
        {0,1,1,0},
        {0,0,0,0},
        {0,0,0,0},
    },
    //빠큐 모양
    {
        {0,1,0,0},
        {1,1,1,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {0,1,0,0},
        {1,1,0,0},
        {0,1,0,0},
        {0,0,0,0},
    },{
        {1,1,1,0},
        {0,1,0,0},
        {0,0,0,0},
        {0,0,0,0},
    },{
        {1,0,0,0},
        {1,1,0,0},
        {1,0,0,0},
        {0,0,0,0},
    },
};
//모양 단일
bool shape[4][4];
int lx=0, ly=0;


void Input() {
    cin.tie(0);
    cin >> N >> M;
    for (int i=0;i<N;i++) for (int j=0;j<M;j++) 
        cin >> graph[i][j];
}

void Count(int y, int x) {
    int score = 0;
    for (int i=0;i<ly+1;i++) for (int j=0;j<lx+1;j++)
        if (shape[i][j]) score += graph[y+i][x+j]; 
    result = max(result, score);
}

void Solve() {
    for (int i=0;i<19;i++) {
        //간단한 리셋
        ly=0;lx=0;

        //이번에 탐색할 모양 지정, 복사
        for (int j=0;j<4;j++) for (int k=0;k<4;k++) {
            shape[j][k] = shapes[i][j][k];
            //모양 크기 지정
            if (shape[j][k]) {ly=max(ly,j);lx=max(lx,k);}
        }

        //최대 점수 계산
        for (int j=0;j<N-ly;j++) for (int k=0;k<M-lx;k++) 
            Count(j,k);
    }
}

int main() {
    Input();
    Solve();
    cout << result;
}